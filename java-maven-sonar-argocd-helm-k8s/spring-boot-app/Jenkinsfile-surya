pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = "suryasjv/java-maven-argocd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "SuryaSJV"
    }

    tools {
        maven "maven3"
    }

    stages {
        stage('Git Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], 
                          userRemoteConfigs: [[url: 'https://github.com/SuryaSJV/Jenkins-Zero-To-Hero.git', credentialsId: 'git-cred']]])
            }
        }

        stage('Compile & Package') {
            steps {
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package -DskipTests'
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                script {
                    sh '''
                    echo "DOCKER_IMAGE: $DOCKER_IMAGE"
                    cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                    docker build -t $DOCKER_IMAGE .
                    '''

                    withDockerRegistry(credentialsId: 'docker-cred', url: 'https://index.docker.io/v1/') {
                        sh "docker push $DOCKER_IMAGE"
                    }
                }
            }
        }
        
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "SuryaSjv"
                IMAGE_NAME = "suryasjv/java-maven-argocd"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                script {
                    sh '''
                    git config --global user.email "suryasjv139@gmail.com"
                    git config --global user.name "SuryaSjv"

                    BUILD_NUMBER=${BUILD_NUMBER}
                    NEW_IMAGE="${IMAGE_NAME}:${BUILD_NUMBER}"
                    DEPLOYMENT_FILE="java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"

                    # Update the image tag in the deployment file
                    sed -i "s|image: .*|image: $NEW_IMAGE|g" $DEPLOYMENT_FILE

                    # Commit and push changes
                    git add $DEPLOYMENT_FILE
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GIT_USER_NAME}:${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                    '''
            }
        }
    }
}

    }
}
